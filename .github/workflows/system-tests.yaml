name: KubeCop System Test

on:
  pull_request_target:
    types: [labeled]

jobs:
  system-tests:
    runs-on: ubuntu-latest
    # Run on specific label or if running under act
    if: github.event.label.name == 'requires-system-test' || github.actor == 'nektos/act'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build the Image
      run: make build-image

    - name: Set up Kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-$(uname)-amd64
        chmod +x ./kind
        ./kind create cluster

    - name: Load Image to Kind
      run: ./kind load docker-image kubecop:latest

    - name: Install Helm and Kubectl
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        sudo ./get_helm.sh
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Install Prometheus and Node Exporter
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update
        helm install prometheus prometheus-community/kube-prometheus-stack --set grafana.enabled=false --namespace monitoring --create-namespace --wait --timeout 5m
        # Check that the prometheus pod is running
        kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=prometheus -n monitoring --timeout=300s

    - name: Install KubeCop
      run: |
        kubectl apply -f etc/app-profile.crd.yaml
        helm install kubecop chart/kubecop -f resources/system-tests/kubecop-values.yaml -n kubescape --create-namespace --wait --timeout 5m
        # Check that the kubecop pod is running
        kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=kubecop -n kubescape --timeout=300s

    - name: Install python dependencies
      run: |
        pip install -r system-tests/requirements.txt

    - name: Run System Tests basic
      run: |
        kubectl port-forward svc/alertmanager-operated 9093:9093 -n monitoring &
        PID=$!
        python system-tests/run.py
        kill $PID



