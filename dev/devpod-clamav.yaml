apiVersion: v1
kind: Namespace
metadata:
  name: kapprofiler-dev-env
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kapprofiler-dev-env
  namespace: kapprofiler-dev-env
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kapprofiler-dev-env-cluster-role-binding
subjects:
- kind: ServiceAccount
  name: kapprofiler-dev-env
  namespace: kapprofiler-dev-env
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clamav
  namespace: kapprofiler-dev-env
data:
  clamd.conf: |
    Foreground yes
    Debug no
    LeaveTemporaryFiles no
    LogTime yes
    LogClean yes
    TCPSocket 3310
    TCPAddr 127.0.0.1
    ExcludePath ^/proc/
    ExcludePath ^/sys/
    ExcludePath ^/host/proc/
    ExcludePath ^/host/sys/
    ExcludePath ^/host/dev/
    ExcludePath ^/host/run/
    MaxDirectoryRecursion 64
    ExtendedDetectionInfo yes

  freshclam.conf: |
    Foreground yes
    DatabaseDirectory /var/lib/clamav
    UpdateLogFile /dev/stdout
    Debug no
    LogFileMaxSize 0
    LogTime yes
    DatabaseOwner root
    DNSDatabaseInfo current.cvd.clamav.net
    DatabaseMirror database.clamav.net
    MaxAttempts 3
    ScriptedUpdates yes
    CompressLocalDatabase no
    TestDatabases yes
    Checks 12
    ConnectTimeout 30
    ReceiveTimeout 60

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kapprofiler-dev-env
  namespace: kapprofiler-dev-env
  labels:
    k8s-app: kapprofiler-dev-env
spec:
  selector:
    matchLabels:
      k8s-app: kapprofiler-dev-env
  template:
    metadata:
      labels:
        k8s-app: kapprofiler-dev-env
    spec:
      serviceAccount: kapprofiler-dev-env
      hostPID: true
      hostNetwork: false
      containers:
      - name: dev-env
        terminationMessagePolicy: FallbackToLogsOnError
        image: ubuntu:latest
        command: ["/bin/sleep"]
        args: ["infinity"]
        imagePullPolicy: Always
        env:
          - name: STDOUT_ENABLED
            value: "true"
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: HOST_ROOT
            value: "/host"
          - name: CLAMAV_HOST
            value: "localhost"
          - name: CLAMAV_PORT
            value: "3310"
          - name: CLAMAV_SCAN_INTERVAL
            value: "60s"
          - name: CLAMAV_SCAN_PATH
            value: "/host"
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        volumeMounts:
        - name: host
          mountPath: /host
        - name: run
          mountPath: /run
        - name: modules
          mountPath: /lib/modules
        - name: debugfs
          mountPath: /sys/kernel/debug
        - name: cgroup
          mountPath: /sys/fs/cgroup
        - name: bpffs
          mountPath: /sys/fs/bpf
      - name: clamd
        image: clamav/clamav-debian:1.2.0-6
        imagePullPolicy: Always
        volumeMounts:
        - name: clamdb
          mountPath: /var/lib/clamav
          readOnly: false
        - name: etc
          mountPath: /etc/clamav
          readOnly: true
        - name: host
          mountPath: /host
          readOnly: true
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - name: host
        hostPath:
          path: /
      - name: run
        hostPath:
          path: /run
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: modules
        hostPath:
          path: /lib/modules
      - name: bpffs
        hostPath:
          path: /sys/fs/bpf
      - name: debugfs
        hostPath:
          path: /sys/kernel/debug
      - name: clamdb
        emptyDir: {}
      - name: etc
        configMap:
          name: clamav
