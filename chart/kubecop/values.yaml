# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: quay.io/armosec/kubecop
  pullPolicy: Always
  tag: "v0.0.39"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "kubecop"

kubecop:
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  gomemlimit:
    enabled: true
    # It is recommended to set this value to 3/4 of the memory limit
    limit: 384MiB
  recording:
    samplingInterval: 60s
    finalizationDuration: 900s
    finalizationJitter: 120s
  alertmanager:
    enabled: false
    endpoints: "localhost:9093"
  httpEndpoint:
    enabled: false
    url: "http://synchronizer.kubescape.svc.cluster.local/apis/v1/kubescape.io/v1/RuntimeAlerts"
  syslog:
    enabled: false
    endpoint: "localhost:514"
    protocol: "udp"
  csv:
    enabled: false
    path: "/tmp/kubecop.csv"
    malwarePath: "/tmp/kubecop-malware.csv"
  prometheusExporter:
    enabled: false
  pprofserver:
    enabled: false
  partialProfiles: # If enabled, application profiles won't be enriched with the following prefixes and mounts.
    enabled: true
    ignoreMounts: "true"
    ignorePrefixes: "/proc,/tmp"

clamAV:
  enabled: false
  host: "localhost"
  port: "3310"
  path: "/host"
  scanInterval: 1h
  image:
    repository: quay.io/armosec/klamav
    pullPolicy: Always
    tag: "beta5"
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "kubecop"

podAnnotations: {}

podSecurityContext: {}

securityContext:
  privileged: true
  capabilities:
    add:
      - SYS_ADMIN
      - NET_ADMIN

securityContextNormal: {}

nodeSelector: {}

tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    operator: Exists

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
        - key: kubernetes.io/arch
          operator: In
          values:
          - arm64
          - amd64

# default rule binding to catch all pods
installDefaultAlertRuleBinding: true

isNamespaced: false
isClusterScoped: true
